{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Documents\\\\GitHub\\\\ecommerce\\\\src\\\\Componente\\\\Routes\\\\UserRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Loading from \"./Cd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  return user && user.token ? /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: () => children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 33\n  }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 81\n  }, this);\n};\n\n_s(UserRoute, \"Jxgif+QfY7+MStbF+F1uZ9ypUGY=\", false, function () {\n  return [useSelector];\n});\n\n_c = UserRoute;\nexport default UserRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRoute\");","map":{"version":3,"sources":["C:/Users/Matheus/Documents/GitHub/ecommerce/src/Componente/Routes/UserRoute.js"],"names":["React","Route","Link","useSelector","Loading","UserRoute","children","rest","user","state","token"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,IAAd,QAAyB,kBAAzB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,MAApB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAD,KAAyB;AAAA;;AACxC,QAAM;AAACC,IAAAA;AAAD,MAASL,WAAW,CAAEM,KAAD,KAAW,EAAC,GAAGA;AAAJ,GAAX,CAAD,CAA1B;AAEA,SAAOD,IAAI,IAAIA,IAAI,CAACE,KAAb,gBAAsB,QAAC,KAAD,OAAWH,IAAX;AAAiB,IAAA,MAAM,EAAG,MAAMD;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAtB,gBAAsE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAA7E;AACF,CAJD;;GAAMD,S;UACYF,W;;;KADZE,S;AAMN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport {Route,Link} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport Loading from \"./Cd\"\r\n\r\nconst UserRoute = ({children, ...rest}) => {\r\n   const {user} = useSelector((state)=> ({...state}));\r\n\r\n   return user && user.token ? (<Route {...rest} render= {() => children}/>) : (<Loading />)\r\n};\r\n\r\nexport default UserRoute;"]},"metadata":{},"sourceType":"module"}