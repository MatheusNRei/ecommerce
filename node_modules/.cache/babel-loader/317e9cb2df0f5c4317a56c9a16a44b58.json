{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Documents\\\\GitHub\\\\ecommerce\\\\src\\\\Paginas\\\\auth\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from 'react';\nimport { auth } from '../../firebase';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPassword = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  useEffect(() => {\n    if (user && user.token) history.push(\"/\");\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const config = {\n      url: process.env.REACT_APP_FORGOT_PASSWORD_URL,\n      handleCodeInApp: true\n    };\n    await auth.sendPasswordResetEmail(email, config).then(() => {\n      setEmail('');\n      setLoading(false);\n      toast.success('Link de reset de senha enviado para o seu email');\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n      toast.error(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container cold-md-6 offset-md-3 p-5\",\n    children: [\" \", loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-danger\",\n      children: \" Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 67\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-danger\",\n      children: \"formulario de redefini\\xE7\\xE3o de senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 118\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Digite seu Email\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-raised\",\n        disabled: !email,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 1\n  }, this);\n};\n\n_s(ForgotPassword, \"ANOUAbszy4K/nXZYPZlZOjVqPS0=\", false, function () {\n  return [useSelector];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["C:/Users/Matheus/Documents/GitHub/ecommerce/src/Paginas/auth/ForgotPassword.js"],"names":["react","useState","useEffect","auth","toast","useSelector","Link","ForgotPassword","history","email","setEmail","loading","setLoading","user","state","token","push","handleSubmit","e","preventDefault","config","url","process","env","REACT_APP_FORGOT_PASSWORD_URL","handleCodeInApp","sendPasswordResetEmail","then","success","catch","error","console","log","message","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,IAAR,QAAmB,gBAAnB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AACrC,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAK,CAACU,OAAD,EAASC,UAAT,IAAuBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAACY,IAAAA;AAAD,MAASR,WAAW,CAAES,KAAD,KAAW,EAAC,GAAGA;AAAJ,GAAX,CAAD,CAA1B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGW,IAAI,IAAEA,IAAI,CAACE,KAAd,EAAqBP,OAAO,CAACQ,IAAR,CAAa,GAAb;AACxB,GAFQ,EAEP,EAFO,CAAT;;AAGA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAClCA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMQ,MAAM,GAAI;AACZC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BADL;AAEZC,MAAAA,eAAe,EAAE;AAFL,KAAhB;AAKA,UAAMtB,IAAI,CAACuB,sBAAL,CAA4BjB,KAA5B,EAAkCW,MAAlC,EACLO,IADK,CACA,MAAM;AACXjB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAR,MAAAA,KAAK,CAACwB,OAAN,CAAc,iDAAd;AACA,KALK,EAMLC,KANK,CAMEC,KAAD,IAAU;AACjBlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA1B,MAAAA,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACG,OAAlB;AACC,KAVK,CAAN;AAYC,GApBD;;AAqBA,sBACA;AAAK,IAAA,SAAS,EAAG,qCAAjB;AAAA,oBAAyDtB,OAAO,gBAAE;AAAI,MAAA,SAAS,EAAE,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAF,gBAAqD;AAAI,MAAA,SAAS,EAAE,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArH,eACA;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAC,cAA9B;AAA6C,QAAA,KAAK,EAAER,KAApD;AAA2D,QAAA,QAAQ,EAAIS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACgB,MAAF,CAASC,KAAV,CAArF;AAAuG,QAAA,WAAW,EAAC,kBAAnH;AAAsI,QAAA,SAAS;AAA/I;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,QAAQ,EAAG,CAAC1B,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AASE,CAtCF;;GAAMF,c;UAGSF,W;;;KAHTE,c;AAuCN,eAAeA,cAAf","sourcesContent":["import react, {useState,useEffect} from 'react'\r\nimport {auth} from '../../firebase'\r\nimport {toast} from 'react-toastify'\r\nimport {useSelector} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ForgotPassword = ({history}) =>{\r\nconst[email,setEmail] = useState(\"\")\r\nconst[loading,setLoading] = useState(\"\")\r\nconst {user} = useSelector((state)=> ({...state}));\r\n\r\nuseEffect(() => {\r\n    if(user&&user.token) history.push(\"/\")\r\n},[]);\r\nconst handleSubmit = async (e) => {\r\ne.preventDefault();\r\nsetLoading(true)\r\nconst config =  {\r\n    url: process.env.REACT_APP_FORGOT_PASSWORD_URL,\r\n    handleCodeInApp: true,\r\n}\r\n\r\nawait auth.sendPasswordResetEmail(email,config)\r\n.then(() => {\r\n setEmail('');\r\n setLoading(false);\r\n toast.success('Link de reset de senha enviado para o seu email')\r\n})\r\n.catch((error) =>{\r\nsetLoading(false);\r\nconsole.log(error)\r\ntoast.error(error.message)\r\n})\r\n\r\n}\r\nreturn (\r\n<div className = \"container cold-md-6 offset-md-3 p-5\"> {loading ?<h4 className= \"text-danger\"> Carregando...</h4> : <h4 className= \"text-danger\">formulario de redefinição de senha</h4> }\r\n<form onSubmit={handleSubmit}>\r\n    <input type=\"email\" className=\"form-control\" value={email} onChange= {(e) => setEmail(e.target.value)} placeholder=\"Digite seu Email\" autoFocus ></input>\r\n<br />\r\n<button className=\"btn btn-raised\" disabled ={!email} >Enviar</button>\r\n\r\n</form>\r\n</div>\r\n)}\r\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}