{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Documents\\\\GitHub\\\\ecommerce\\\\src\\\\Paginas\\\\auth\\\\ConcRegistro.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from 'react';\nimport { auth } from '../../firebase';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createOrUpdateUser = async authtoken => {\n  return await axios.post(`${process.env.REACT_APP_API}/create-or-update-user`, {}, {\n    headers: {\n      authtoken\n    }\n  });\n};\n\nconst ConcRegistro = ({\n  history\n}) => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  let dispatch = useDispatch();\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailRegistro\"));\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      toast.error('Email e senha são necessarios!');\n      return;\n    }\n\n    if (password.length < 6) {\n      toast.error(\"a senha precisa conter ao menos 6 caracteres\");\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(email, window.location.href);\n\n      if (result.user.emailVerified) {\n        window.localStorage.removeItem('emailRegistro');\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult();\n        toast.info(\"Registro Concluido!\");\n        createOrUpdateUser(idTokenResult.token).then(res => dispatch({\n          type: 'LOGGED_IN_USER',\n          payload: {\n            name: res.data.name,\n            email: res.data.email,\n            token: idTokenResult.token,\n            role: res.data.role,\n            id: res.data._id\n          }\n        })).catch();\n        history.push('/');\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  const concregistroForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [\"Formulario Registro\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      value: email,\n      disabled: true,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      autoFocus: true,\n      placeholder: \"Senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-raised\",\n      children: \"Registrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 1\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \".col-md-6.offset-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Conclus\\xE3o de registro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 20\n        }, this), concregistroForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConcRegistro, \"BfKxsfhxuR7OR9GhWaQtz37K4Wo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ConcRegistro;\nexport default ConcRegistro;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConcRegistro\");","map":{"version":3,"sources":["C:/Users/Matheus/Documents/GitHub/ecommerce/src/Paginas/auth/ConcRegistro.js"],"names":["react","useState","useEffect","auth","toast","useDispatch","useSelector","axios","createOrUpdateUser","authtoken","post","process","env","REACT_APP_API","headers","ConcRegistro","history","password","setPassword","email","setEmail","user","state","dispatch","window","localStorage","getItem","handleSubmit","e","preventDefault","error","length","result","signInWithEmailLink","location","href","emailVerified","removeItem","currentUser","updatePassword","idTokenResult","getIdTokenResult","info","token","then","res","type","payload","name","data","role","id","_id","catch","push","console","log","message","concregistroForm","target","value"],"mappings":"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","sourcesContent":["import react, {useState,useEffect} from 'react'\r\nimport {auth} from '../../firebase'\r\nimport {toast} from 'react-toastify'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\n\r\n\r\nconst createOrUpdateUser = async (authtoken) => {\r\n    return await axios.post(`${process.env.REACT_APP_API}/create-or-update-user`, {}, {\r\n        headers: {\r\n            authtoken,\r\n        },\r\n    });\r\n\r\n}\r\n\r\nconst ConcRegistro = ({history}) => {\r\nconst [password,setPassword] = useState(\"\");\r\nconst [email,setEmail] = useState(\"\");\r\nconst {user} = useSelector((state)=> ({...state}));\r\nlet dispatch= useDispatch()\r\n\r\nuseEffect(()=>{setEmail(window.localStorage.getItem(\"emailRegistro\"))},[])\r\nconst handleSubmit = async (e) => {\r\n e.preventDefault()\r\n if (!email || !password){\r\n     toast.error('Email e senha são necessarios!')\r\n     return;\r\n }\r\n if(password.length <6){\r\n     toast.error(\"a senha precisa conter ao menos 6 caracteres\")\r\n    return;\r\n    }\r\n try{\r\nconst result = await auth.signInWithEmailLink(email,window.location.href)\r\nif (result.user.emailVerified){\r\n    window.localStorage.removeItem('emailRegistro');\r\n    let user= auth.currentUser\r\n    await user.updatePassword(password);\r\n    const idTokenResult = await user.getIdTokenResult()\r\n    toast.info(\"Registro Concluido!\")\r\n    createOrUpdateUser(idTokenResult.token)\r\n    .then ( res =>  dispatch({\r\n       type:'LOGGED_IN_USER',\r\n       payload:{\r\n         name: res.data.name,\r\n         email: res.data.email,\r\n         token: idTokenResult.token,\r\n         role: res.data.role,\r\n         id: res.data._id\r\n       }\r\n   \r\n    })\r\n   )\r\n    .catch()\r\n   \r\n   \r\n    history.push('/')\r\n   }  \r\n}\r\n\r\n catch(error){\r\n     console.log(error);\r\n     toast.error(error.message)\r\n }\r\n} ;\r\nconst concregistroForm = () => (\r\n<form onSubmit={handleSubmit}>Formulario Registro\r\n<input type=\"email\" className=\"form-control\" value = {email} disabled autoFocus></input>\r\n<input type=\"password\" className=\"form-control\" value = {password} onChange={(e) => setPassword(e.target.value)} autoFocus placeholder=\"Senha\"></input>\r\n\r\n<button type =\"submit\" className=\"btn btn-raised\">Registrar</button>\r\n</form>\r\n)\r\nreturn (\r\n        <div className=\"container p-5\">\r\n           <div className=\"row\">\r\n               <div className=\".col-md-6.offset-md-3\">\r\n                   <h4>Conclusão de registro</h4> \r\n                   {concregistroForm()}\r\n               </div>\r\n           </div>\r\n        </div>\r\n     );\r\n     \r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    export default ConcRegistro;"]},"metadata":{},"sourceType":"module"}